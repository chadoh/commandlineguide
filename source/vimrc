" WELCOME TO YOUR FIRST .vimrc!
" After you make changes, you'll have to restart vim to see their affect

" Basic setup
set shell=/bin/bash
set nocompatible " choose no compatibility with legacy vi
set encoding=utf-8

" A customizable prefix key. Search this file for <leader> for examples
let mapleader=" "

" terminal vim sucks at pasting; press F2 to toggle making it better
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

set showmode

filetype plugin indent on " load file type plugins + indentation

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" COLOR
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set t_Co=256 " 256 colors
colorscheme default

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BASIC EDITING CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable " syntax highlighting

set showmatch
set showcmd " display incomplete commands
set ruler
set number
set splitright
set splitbelow

" Improves colon command completion
set wildmenu
set wildmode=longest,list

" allows interacting with vim using mouse & scroll wheel/gesture
set mouse=a

" Store temporary files in a central spot
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces
set expandtab                   " use spaces, not tabs
set backspace=indent,eol,start  " backspace through everything in insert mode
set autoindent

" Set 7 lines above/below cursor - when moving vertically using j/k
set so=7

" Set ex history higher
set history=1000

" Preseve undo across sessions
if exists("&undodir")
  set undodir=~/.vim-tmp/undo/
  set undofile
endif

" Resize splits when the window is resized
au VimResized * :wincmd =

" Remove trailing whitespace from files on save
" (except files with "b:noStripWhitespace=1" (only markdown by default))
fun! StripTrailingWhitespace()
    " Don't strip on these filetypes
    if &ft =~ 'markdown'
        return
    endif
    %s/\s\+$//e
endfun

autocmd BufWritePre * call StripTrailingWhitespace()

" Return to last edit position when opening files
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif

" Searching
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" Always set cursor to first line when committing to git
autocmd FileType gitcommit call setpos('.', [0, 1, 1, 0])

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
    let old_name = expand('%')
    let new_name = input('New file name: ', expand('%'), 'file')
    if new_name != '' && new_name != old_name
        exec ':saveas ' . new_name
        exec ':silent !rm ' . old_name
        redraw!
    endif
endfunction
map <leader>m :call RenameFile()<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MISC KEY MAPS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Move around splits with <c-hjkl>
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

nnoremap <leader><leader> <c-^>
nnoremap <Leader>hs :set hlsearch!<cr>

" turn spell check on/off
nmap <leader>c :set spell!<cr>

" turn off Ex mode!
:nnoremap Q <Nop>
:nnoremap qQ <Nop>

"create newline using Enter or \ without entering insert mode
nmap \ O<Esc>
nmap <CR> o<Esc>

"(un)indent lines without leaving visual mode
vmap > >1v
vmap < <1v

" Make Y behave like D or C, instead of dd or yy
nnoremap Y y$

"save & quit & reload faster
nnoremap <leader>q :q<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>x :x<CR>

" browse to the current line on Github
" requires a `url` shortcut in .gitconfig -
" https://github.com/chadoh/dotfiles/blob/master/git/gitconfig#L35
nnoremap <leader>o :!echo `git url`/blob/`git rev-parse --abbrev-ref HEAD`/%\#L<C-R>=line('.')<CR> \| xargs open<CR><CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Color stuff b/c it doesn't work after setting the colorscheme
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
highlight LineNR ctermfg=238
highlight Visual term=none cterm=none ctermbg=240
highlight Search ctermfg=234 ctermbg=222
highlight String ctermfg=12
highlight Constant ctermfg=13
hi clear SpellBad
hi clear SpellCap
hi SpellBad cterm=underline
hi SpellBad ctermfg=9
hi SpellCap cterm=underline
hi SpellCap ctermfg=6
